name: Build and deploy to prod when merged to master

on:
  push:
    branches:
      - chore/hos/see-also

jobs:
  build-and-deploy:
    name: Deploy to prod environment
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup python environment
      uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - name: Setup gcloud CLI for image-store
      uses: google-github-actions/setup-gcloud@master
      with:
        service_account_key: ${{ secrets.GCP_SA_DIGDIR_FDK_GCR_KEY }}
        export_default_credentials: true

    - name: Configure docker to use the gcloud command-line tool as a credential helper
      run: gcloud auth configure-docker eu.gcr.io

    - name: Cache Docker layers
      uses: actions/cache@v2.1.6
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1.6.0

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: eu.gcr.io/digdir-fdk-infra/concept-catalog-etl
        flavor: |
          latest=true
        tags: |
          type=raw,value=${{ github.sha }},priority=1000
          type=ref,event=branch

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: ./
        file: ./Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache
        build-args:  |
          GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}

    - name: Apply Helm template
      run: |
        helm template --set DOCKER_IMAGE_NAME="eu.gcr.io/digdir-fdk-infra/concept-catalog-etl:$GITHUB_SHA" \
        -f ./helm-sources/values/prod.yaml \
        ./helm-sources/ > ./kubectlapply.yaml
        chmod o+w ./kubectlapply.yaml
        cat kubectlapply.yaml

    - name: Setup gcloud CLI for deploy
      uses: google-github-actions/setup-gcloud@master
      with:
        service_account_key: ${{ secrets.DIGDIR_FDK_PROD_AUTODEPLOY }}
        export_default_credentials: true

    - name: Deploy to GCP
      run: |
        gcloud container clusters get-credentials digdir-fdk-prod --region europe-north1-a --project digdir-fdk-prod
        kubectl apply -f ./kubectlapply.yaml --force
